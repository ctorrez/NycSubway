// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NycSubway.Database.Context;

namespace NycSubway.Database.Migrations.SubwayDb
{
    [DbContext(typeof(SubwayDbContext))]
    partial class SubwayDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NycSubway.Data.Entities.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Email");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.HasIndex("FirstName", "LastName");

                    b.ToTable("AppUsers");
                });

            modelBuilder.Entity("NycSubway.Data.Entities.AppUserStationEntrance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AppUserId")
                        .HasColumnType("int");

                    b.Property<int>("StationEntranceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("StationEntranceId");

                    b.ToTable("AppUserStationEntrances");
                });

            modelBuilder.Entity("NycSubway.Data.Entities.StationEntrance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsClustered(false);

                    b.ToTable("StationEntrances");
                });

            modelBuilder.Entity("NycSubway.Data.Entities.AppUserStationEntrance", b =>
                {
                    b.HasOne("NycSubway.Data.Entities.AppUser", "AppUser")
                        .WithMany("AppUserStationEntrances")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NycSubway.Data.Entities.StationEntrance", "StationEntrance")
                        .WithMany("AppUserStationEntrances")
                        .HasForeignKey("StationEntranceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("StationEntrance");
                });

            modelBuilder.Entity("NycSubway.Data.Entities.AppUser", b =>
                {
                    b.Navigation("AppUserStationEntrances");
                });

            modelBuilder.Entity("NycSubway.Data.Entities.StationEntrance", b =>
                {
                    b.Navigation("AppUserStationEntrances");
                });
#pragma warning restore 612, 618
        }
    }
}
